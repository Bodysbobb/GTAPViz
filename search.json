[{"path":"https://bodysbobb.github.io/GTAPViz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Pattawee Puangchit Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"GTAPViz built upon HARplus package facilitate workflow GTAP users automating data extraction processing .sl4 .har result files. vignette illustrates efficiently handle GTAP model output files using GTAPViz, ensuring seamless data manipulation analysis. data processing, default variable definitions based GTAP Model Version 7, aligning standard structure used Global Trade Analysis Project (GTAP). Users can customize variable mappings, extract relevant indicators, format data various analytical needs. GTAPViz provides structured methodologies process datasets, integrating automated extraction, unit assignments, data validation. leveraging HARplus functionalities, package simplifies handling multi-dimensional economic data GTAP simulations. details HARplus, see:.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:project-setting","dir":"Articles","previous_headings":"","what":"Project Directory","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"use R code, solution files, including .sl4 .har, must saved RUNGTAP CMD placed folder. Adjust <project.folder> directory desired path. maintain folder structure code, may need modify input (<input.folder>), output (<output.folder>), mapping (<map.folder>) directories. default, R code assumes <project.folder> contains following three main folders: ‚Äì Stores input files (.e., .sl4 .har). See Solution files details. ‚Äì Stores exported output files. map ‚Äì Stores mapping .xlsx file (critical processing). üìÇ project.folder/  ‚îú‚îÄ‚îÄ üìÇ / # Stores input files (.sl4, .har)  ‚îú‚îÄ‚îÄ üìÇ / # Stores output files  ‚îú‚îÄ‚îÄ üìÇ map/ # Stores mapping file (OutputMapping.xlsx) : Example Project Folder","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:mapping-files","dir":"Articles","previous_headings":"","what":"Mapping Files","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"<OutputMapping.xlsx> specifies variables extract solution files <SL4File sheet> HAR file <HARFile sheet>. required variables must listed \"Variable\" column. \"Description\" \"Unit\", may: Leave columns blank put \"\" <info.mode> setting exclude columns. Manually define variables put \"Yes\" <info.mode> setting. Leave columns blank put \"GTAPv7\" <info.mode> setting get default definition unit based GTAPv7. Define variables, leave others blank, put \"Mix\" <info.mode> setting get definition based input defined variables GTAP default others. : Example SL4File HARFile sheet üí° Tip: mapping file (<OutputMapping.xlsx>) can also manually created R dataframe, provided follows exact structure, including column names. dataframe must contain least \"Variable\" column, \"Description\" \"Unit\" columns optional depending selected <info.mode>.","code":"mapping_df <- data.frame(   Variable = c(\"qgdp\", \"EV\", \"pebfactreal\"),   Description = c(\"Real GDP Index (%)\", \"Welfare Equivalents\", \"Cost of endowment\"),   Unit = c(\"percent\", \"million USD\", \"percent\"),   stringsAsFactors = FALSE )"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:input-files","dir":"Articles","previous_headings":"","what":"Input Files","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"<case.name> variable setting contains experiment names results extracted merged single output analysis, graph creation. Multiple experiments can included, increasing number extend processing time.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"input-files-format","dir":"Articles","previous_headings":"Input Files","what":"Input Files Format","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"input files must stored <input.folder> (default: \"\" inside <project.folder>). File names must follow <case.name> ensure consistency input .sl4 file must corresponding -WEL.HAR file EXP1.sl4, EXP1-WEL.har EXP2.sl4, EXP2-WEL.har üìÇ /  ‚îú‚îÄ‚îÄ üìÑ EXP1.sl4  ‚îú‚îÄ‚îÄ üìÑ EXP1-WEL.har  ‚îú‚îÄ‚îÄ üìÑ EXP2.sl4  ‚îú‚îÄ‚îÄ üìÑ EXP2-WEL.har : Example Input Files within Input Folder","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:output-files","dir":"Articles","previous_headings":"","what":"Output Files","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"R code, default, can generate four output formats: CSV, STATA, R, Text files, defined <csv.output>, <stata.output>, <r.output>, <txt.output>, respectively. setting, placing \"Yes\" \"\" required format. end, code automatically generate \"README.xlsx\" file, reporting location exported key variables (.e., sheet names). Since GTAP results contain different data dimensions, output separated dimension (1D, 2D, 3D). 1D 2D data, results automatically grouped \"Region\" \"Sector\"‚Äîdistinguishing variables reported sector level reported region‚Äîeasier data manipulation. However, data larger 3D reported separately dimension, output files named according original dimension names. exception qxs, represents bilateral trade changes; selected export, placed \"BilateralTrade\" sheet.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:flexibility","dir":"Articles","previous_headings":"","what":"Flexibility and Applicability","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"R code designed extract variable .SL4 .HAR files, even newly created users included original GTAP model. Furthermore, code adaptable version GTAP CGE model, provided .SL4 .HAR files exist adhere required format. cases HARFile.HAR files unavailable, script still function, decomposition component skipped.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample Data","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"Sample data used vignette obtained GTAPv7 model utilizes publicly available data GTAP 9 database. details, refer GTAP Database Archive.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"loading-package","dir":"Articles","previous_headings":"","what":"Loading Package","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"proceeding, ensure GTAPViz HARplus installed loaded:","code":"library(GTAPViz)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"sec:setting","dir":"Articles","previous_headings":"","what":"Output Setup","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"chunk defines experiment names, handling description unit columns, output formats processing GTAP model results. EXP1.sl4 EXP1-WEL.har ‚Üí Processed EXP1. EXP2.sl4 EXP2-WEL.har ‚Üí Processed EXP2. \"Yes\" ‚Üí Use manually defined descriptions units mapping file. \"\" ‚Üí Exclude \"Description\" \"Unit\" columns. \"GTAPv7\" ‚Üí Use default definitions units based GTAP Model Version 7. \"Mix\" ‚Üí Use manually defined values available, GTAP defaults rest. CSV (csv.output) ‚Üí \"\" STATA (stata.output) ‚Üí \"\" R (r.output) ‚Üí \"Yes\" (.rds output enabled) Text (txt.output) ‚Üí \"\" setup allows users customize data processed exported based needs.","code":"# Define experiment name / output name  experiment <- c(\"EXP1\", \"EXP2\")  # Adding Description / Unit (Yes/No/GTAPv7/Mix) info.mode <- \"GTAPv7\"  # Output: (CSV, STATA, R)  # \"Yes\" to opt for this output format, \"No\" to skip the output format csv.output <- \"No\"     stata.output <- \"No\"   r.output <- \"Yes\" txt.output <- \"No\""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_data_processing.html","id":"extracting-data","dir":"Articles","previous_headings":"","what":"Extracting Data","title":"GTAPViz: Automating GTAP Data Processing with HARplus","text":"","code":"process_gtap_data(   sl4file = sl4map,    harfile = harmap,   experiment = experiment,   mapping_info = info.mode,   project_dir = project.folder,   export_data = FALSE )"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GTAPViz: Visualizing GTAP Model Results","text":"vignette demonstrates generate structured, publication-ready figures using GTAPViz‚Äôs built-visualization tools. visualization framework based SL4Plot HARPlot sheets, define variables figure titles used plotting. Users can specify directly within external mapping file generate dynamically R environment.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"plot-types","dir":"Articles","previous_headings":"Introduction","what":"Plot Types","title":"GTAPViz: Visualizing GTAP Model Results","text":"vignette introduces four different plot commands can generate 10 different plots: comparison_plot: Compares single variable across experiments selected dimension (e.g., region, sector). example, qgdp, ppriv, EV can compared across selected regions (REG). detail_plot: Provides comprehensive visualization variable across regions sectors within experiment. example, qgdp can plotted across regions, qo across sectors within country. macro_plot: Presents global macroeconomic indicators without dimensions, experiment represented single aggregated value. Examples include pgdpwld, qgdpwld, vgdpwld. stack_plot: Displays composition variable stacking components within experiment, facilitating decomposition analysis. Examples include EV decomposition GTAP results.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"report-tables","dir":"Articles","previous_headings":"Introduction","what":"Report Tables","title":"GTAPViz: Visualizing GTAP Model Results","text":"vignette also demonstrates commands generating report_table plot type. plot type corresponding report_table pivots organizes plotting data format suitable academic papers allows export .xlsx file. Users can also choose generate standalone report_table without creating associated plot. overview data processing functionalities, refer separate vignette:.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:project-setting","dir":"Articles","previous_headings":"","what":"Project Directory","title":"GTAPViz: Visualizing GTAP Model Results","text":"use R code, solution files, including .sl4 .har, must saved RUNGTAP CMD placed folder. Adjust <project.folder> directory desired path. maintain folder structure code, may need modify input (<input.folder>), output (<output.folder>), mapping (<map.folder>) directories. default, R code assumes <project.folder> contains following three main folders: ‚Äì Stores input files (.e., .sl4 .har). See Solution files details. ‚Äì Stores exported output files. map ‚Äì Stores mapping .xlsx file (critical processing). üìÇ project.folder/  ‚îú‚îÄ‚îÄ üìÇ / # Stores input files (.sl4, .har)  ‚îú‚îÄ‚îÄ üìÇ / # Stores output files  ‚îú‚îÄ‚îÄ üìÇ map/ # Stores mapping file (OutputMapping.xlsx) : Example Project Folder","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:mapping-files","dir":"Articles","previous_headings":"","what":"Mapping Files","title":"GTAPViz: Visualizing GTAP Model Results","text":"<OutputMapping.xlsx> specifies variables extract solution files <SL4File sheet> HAR file <HARFile sheet>. required variables must listed \"Variable\" column. \"Description\" \"Unit\", may: Leave columns blank put \"\" <info.mode> setting exclude columns. Manually define variables put \"Yes\" <info.mode> setting. Leave columns blank put \"GTAPv7\" <info.mode> setting get default definition unit based GTAPv7. Define variables, leave others blank, put \"Mix\" <info.mode> setting get definition based input defined variables GTAP default others. Note: \"Unit\" column required figure commands; without , command proceed. \"Description\" column optional can used plot title‚Äîkeeping concise recommended! : Example SL4File HARFile sheet üí° Tip: mapping file (<OutputMapping.xlsx>) can also manually created R dataframe, provided follows exact structure, including column names. dataframe must contain least \"Variable\" column, \"Description\" \"Unit\" columns optional depending selected <info.mode>. example, following R code creates equivalent mapping dataframe:","code":"mapping_df <- data.frame(   Variable = c(\"qgdp\", \"EV\", \"ppriv\"),   Description = c(\"Real GDP Index\", \"Welfare Equivalents\", \"Cost of endowment\"),   Unit = c(\"Percent\", \"million USD\", \"percent\"),   stringsAsFactors = FALSE )"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:input-files","dir":"Articles","previous_headings":"","what":"Input Files","title":"GTAPViz: Visualizing GTAP Model Results","text":"<case.name> variable setting contains experiment names results extracted merged single output analysis, graph creation. Multiple experiments can included, increasing number extend processing time.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"input-files-format","dir":"Articles","previous_headings":"Input Files","what":"Input Files Format","title":"GTAPViz: Visualizing GTAP Model Results","text":"input files must stored <input.folder> (default: \"\" inside <project.folder>). File names must follow <case.name> ensure consistency input .sl4 file must corresponding -WEL.HAR file EXP1.sl4, EXP1-WEL.har EXP2.sl4, EXP2-WEL.har üìÇ /  ‚îú‚îÄ‚îÄ üìÑ EXP1.sl4  ‚îú‚îÄ‚îÄ üìÑ EXP1-WEL.har  ‚îú‚îÄ‚îÄ üìÑ EXP2.sl4  ‚îú‚îÄ‚îÄ üìÑ EXP2-WEL.har : Example Input Files within Input Folder","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample Data","title":"GTAPViz: Visualizing GTAP Model Results","text":"Sample data used vignette obtained GTAPv7 model utilizes publicly available data GTAP 9 database. details, refer GTAP Database Archive.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"loading-package","dir":"Articles","previous_headings":"","what":"Loading Package","title":"GTAPViz: Visualizing GTAP Model Results","text":"proceeding, ensure GTAPViz HARplus installed loaded:","code":"library(GTAPViz)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:setting","dir":"Articles","previous_headings":"","what":"Input Setup","title":"GTAPViz: Visualizing GTAP Model Results","text":"chunk defines experiment names, handling description unit columns, output formats processing GTAP model results. EXP1.sl4 EXP1-WEL.har ‚Üí Processed EXP1. EXP2.sl4 EXP2-WEL.har ‚Üí Processed EXP2. \"Yes\" ‚Üí Use manually defined descriptions units mapping file. \"\" ‚Üí Exclude \"Description\" \"Unit\" columns. \"GTAPv7\" ‚Üí Use default definitions units based GTAP Model Version 7. \"Mix\" ‚Üí Use manually defined values available, GTAP defaults rest.","code":"# Define experiment name / output name  case.name <- c(\"US_All\", \"US_All_RetalTar\", \"US_All_ReduceTar50\", \"US_All_RegReduceTar50\",                     \"US_All10\", \"US_All10_RetalTar\", \"US_All10_ReduceTar50\", \"US_All10_RegReduceTar50\")  # Adding Description / Unit (Yes/No/GTAPv7/Mix) info.mode <- \"Mix\""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"preparing-input-data","dir":"Articles","previous_headings":"","what":"Preparing Input Data","title":"GTAPViz: Visualizing GTAP Model Results","text":"figures tables sorted according order input <case.name>, <selected_regions>, <selected_sector>. example: - selected_regions <- c(\"USA\", \"CHN\"), plot USA appear CHN. - case.name <- c(EXP2, EXP1), figure panel EXP2 appear EXP1 (.e., left right).","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:automategtap","dir":"Articles","previous_headings":"Preparing Input Data","what":"Automation Based on GTAPv7 Results","title":"GTAPViz: Visualizing GTAP Model Results","text":"automate process generating figures GTAP results GTAP users, developed streamlined data extraction method using HARplus package. automation may work well non-GTAP models, may need manually extract manipulate data using figure code provided vignette. Refer manual data preparation details. command performs following tasks automatically: Filtering selected regions based (REG) column, defined <selected_regions> variable . Set NULL extract regions. Filtering selected sectors based (ACTS/COMM) column, defined <selected_sector> variable . Set NULL extract sectors. Adding unit columns dataset. Tip: automation uses \"HARplus::get_data_by_dims\" command. However, formats, \"HARplus::get_data_by_var\", \"HARplus::group_data_by_var\", data format, can also work figure code. Keep mind alternatives may require additional data preparation ensure compatibility figure command.","code":"# Region to be plotted selected_regions <- c(\"USA\", \"CHN\", \"CAN\", \"ASEAN\", \"ROW\")  # Sector to be plotted (NULL to select all) selected_sector <- NULL  # Extract data with region and experiment filters plot.dta <- plot_gtap_data(   sl4file = sl4plot,   harfile = harplot,    experiment  = case.name,   mapping_info = info.mode,    region_select  = selected_regions,   sector_select = selected_sector,   project_dir = project.folder,   subtotal = FALSE )"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:manualdata","dir":"Articles","previous_headings":"Preparing Input Data","what":"Manual Data Preparation","title":"GTAPViz: Visualizing GTAP Model Results","text":"models additional variables users may want include default model, data can still prepared format using following steps: Use \"HARplus::load_sl4x\" \"HARplus::load_harx\", followed \"HARplus::get_data_by_dims\", obtain data exact format. Filter dataframe using standard R data.frame operations, : Add \"Unit\" \"Description\" columns (\"Unit\" column required processing) using \"add_mapping_info\" command package.","code":"# Extract Data sl4data1 <- HARplus::load_sl4x(system.file(\"extdata\", \"EXP1.sl4\", package = \"HARplus\")) sl4data2 <- HARplus::load_sl4x(system.file(\"extdata\", \"EXP2.sl4\", package = \"HARplus\")) sl4data <- HARplus::get_data_by_dims(NULL, sl4data1, sl4data2, merge_data = TRUE)  # Filter Data using Dataframe and lapply manual.data <- lapply(sl4data, function(x) {   if (is.data.frame(x)) {     x[x$REG %in% selected_regions & x$COMM %in% selected_sector & x$ACTS %in% selected_sector       & x$Experiment %in% selected_exp , ]   } else {     x     } })  # Adding Unit and Description Column manual.data <- add_mapping_info(manual.data, external_map = \"/your/mapping.xlsx\",                                 description_info = TRUE,                                 unit_info = TRUE)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:customunit","dir":"Articles","previous_headings":"Preparing Input Data","what":"Customizing Units and Labels (Optional)","title":"GTAPViz: Visualizing GTAP Model Results","text":"following two optional processes recommended better figure illustration. mandatory, highly recommended. Note: processes automatically applied automation step must performed manually. Note: must define \"adjustment\" method using /, *, +, -. Example: convert values million USD billion USD, set adjustment = c(\"/1000\"). Renaming column names figure generation (e.g., renaming REG Region) using <HARplus::rename_dims>.","code":"# Convert Value if Needed sl4.plot.data <- convert_units(   sl4.plot.data,   change_unit_from = c(\"million USD\"),   change_unit_to = c(\"billion USD\"),   adjustment = c(\"/1000\") )  har.plot.data <- convert_units(   har.plot.data,   change_unit_from = c(\"million USD\"),   change_unit_to = c(\"billion USD\"),   adjustment = c(\"/1000\") )  # Convert the column name if needed rename_col <- data.frame(   old = c(\"REG\", \"COMM\", \"ACTS\"),   new = c(\"Region\", \"Commodity\", \"Activity\")   )  sl4.plot.data <- HARplus::rename_dims(sl4.plot.data, rename_col) har.plot.data <- HARplus::rename_dims(har.plot.data, rename_col)"},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"important-read-before-plotting","dir":"Articles","previous_headings":"Before Starting the Plot","what":"Important: Read Before Plotting","title":"GTAPViz: Visualizing GTAP Model Results","text":"proceeding, strongly recommend reviewing help documentation plot command using ?, e.g., ?comparison_plot. plot function provides multiple customization options various export methods. Understanding features allow fully utilize capabilities.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"key-features-to-explore","dir":"Articles","previous_headings":"Before Starting the Plot","what":"Key Features to Explore","title":"GTAPViz: Visualizing GTAP Model Results","text":"Adjusting following options can significantly alter figure outputs, allowing flexibility visualization: compare_by_experiment ‚Äì Plots Experiment x-axis \"x_axis_from\" values panels. separate_figure ‚Äì Creates individual figures panel value instead combining . invert_panel ‚Äì Switches layout using \"split_by\" panels Experiment separation. color_tone ‚Äì Controls base color plot, ensuring aesthetic consistency. experimenting options, can generate wide range figure formats, covering almost visualization needs. color_tone parameter enhances figure aesthetics, making visually appealing desired.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"example","dir":"Articles","previous_headings":"Before Starting the Plot","what":"Example:","title":"GTAPViz: Visualizing GTAP Model Results","text":"comparison_plot allows : - Swap axes - Export multiple figures, separating experiment (.e., one figure per experiment) - Compare data directly within single figure Exploring options ensure make GTAPViz‚Äôs visualization tools. üìå Rule Thumb: can modify rename almost columns dataframe long adjust corresponding code accordingly. However, must rename column names \"Experiment\", \"Value\", \"Variable\". values inside columns can modified freely, column names must remain unchanged.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:comparisonplot","dir":"Articles","previous_headings":"","what":"Comparison Plot","title":"GTAPViz: Visualizing GTAP Model Results","text":"figure designed compare single dimension across experiments‚Äî.e., suitable multi-dimensional data. Specifically, figure intended illustrate comparisons ‚ÄúRegion‚Äù across experiments. Therefore, recommended use variables contain \"REG\" dimension (without additional dimensions), qgdp, ppriv, EV, tot, u GTAPv7 model. Note: command automatically generate separate figure selected variable. example, choose plot qgdp, ppriv, EV, tot, u, output include six separate figures default. figure can used single-dimensional comparisons beyond ‚ÄúRegion,‚Äù long dimension illustrated one-dimensional (e.g., REG, COMM, ACTS, etc.). Tip: check data suitable figure, use command: \"HARplus::group_data_by_dims\". Variables listed within sublist \"1D\" compatible figure. better understand command works, highly encourage use help command: \"?comparison_plot\" explore available options. Tip: Since plot allow direct font size adjustments, key achieving best figure format modify panel_rows/panel_cols width/height optimal output. default, command automatically calculates balanced square layout, highly recommend experimenting settings refine result.","code":"comparison_plot(sl4.plot.data$REG,                 x_axis_from = \"Region\",                 plot_var = sl4plot,                 title_prefix = \"Impact on\",                 output_dir = output.folder,                 description_as_title = TRUE,                 compare_by_experiment = FALSE,                 invert_panel = FALSE,                 separate_figure = FALSE,                 color_tone = \"grey\",                 panel_rows = NULL,                 panel_cols = NULL,                 width = 20,                 height = 12,                 legend_position = \"bottom\")"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"comparison-report-table","dir":"Articles","previous_headings":"","what":"Comparison Report Table","title":"GTAPViz: Visualizing GTAP Model Results","text":"report table variables used comparison plot. Based previous plot structure, table pivots data order Experiment > Region, variables presented wide format (.e., variable column). table also avoids repeating experiment names maintains sorting order figure.","code":"report_table(sl4.plot.data$REG, vars = sl4plot$Variable,               col_names = sl4plot$Description,                x_axis_from = \"Region\",              output_dir = output.folder)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:macroplot","dir":"Articles","previous_headings":"","what":"GTAP Macro Variable Plot","title":"GTAPViz: Visualizing GTAP Model Results","text":"figure designed display aggregated values comparison across experiments, global economic impacts. specifically intended GTAP Macro variables extracted \"Macros\" header <.sl4> files. Tip: figure can also used types aggregated data. generate figure, users must first extract relevant GTAP Macro variables using <gtap_macros_data> command: ‚Äôs quite similar process variables, process little trickier GTAP Macros variable since variables nested single header \"Macros\" follow mapping external file automatically. want specifically variables within GTAP Macros plotted well rename variable, can follows R environment: Tip: mapping process can also skipped used .xlsx file construct like variables. However, must define variable \"Macros\" header manually ‚ÄúVariable‚Äù column. plot figure, can use following command","code":"Macros <- do.call(gtap_macros_data, c(as.list(paste0(input.folder, \"/\", case.name, \".sl4\")),                   list(experiment_names = case.name))) # Selecting Variables selected_marcro <- c(\"pgdpwld\", \"qgdpwld\", \"vgdpwld\") macros_new_name <- c(\"pgdpwld\", \"qgdpwld\", \"vgdpwld\")  # Rename macro.map <- data.frame(   Variable = selected_marcro,   Description = macros_new_name,   stringsAsFactors = FALSE ) macro_plot(Macros,            plot_var = macro.map,            compare_by_experiment = FALSE,            color_tone = \"grey\",            output_dir = output.folder,            description_as_title = FALSE,            panel_rows = 2,            width = 45,            separate_figure = FALSE,            legend_position = \"bottom\") scalar_table(Macros, vars = selected_marcro,               output_dir = output.folder)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:detailplot","dir":"Articles","previous_headings":"","what":"Detail Plot","title":"GTAPViz: Visualizing GTAP Model Results","text":"plot designed large-scale data visualization, implied name, <detail_plot>. illustrates sectors (COMM ACTS) regions (REG) experiment. differs <comparison_plot>, visualizes selected regions. GTAPv7 variables suitable figure include qo, qxw, qmw, pmw, pxw, qgdp, plotted across regions within experiment. Since variable want plot may come different dataframes (.e., different dimension names), developed function simplify process. selecting \"split_by\" primary column shared across variables plotted, can specify \"y_axis_from\" multiple columns. function automatically identify corresponding column dataset. Another powerful tool top_impact option allows automatic filtering selecting affected variables. example, setting top_impact = 10 include top 5 positive top 5 negative values. fewer 5 exist either category, additional values included meet specified limit. example, following code snippet, function locate variables within dimensions COMM*REG, REG*COMM, ACTS*REG, REG*ACTS plotting:   Tip: figure can include multiple variables y-axis, may need manually define \"width\" \"height\" output accordingly.","code":"lapply(sl4.plot.data, function(df) {   detail_plot(df,               y_axis_from = c(\"Commodity\", \"Activity\"),               split_by = \"Region\",               plot_var = sl4plot,               output_dir = output.folder,               description_as_title = TRUE,               top_impact = 10,               panel_rows = 1,               panel_cols = NULL,               separate_figure = FALSE,               invert_panel = TRUE,               width = 50)})"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:stackplot","dir":"Articles","previous_headings":"","what":"Decomposition (Stack) Plot","title":"GTAPViz: Visualizing GTAP Model Results","text":"plot designed visualizing decomposition results, allowing users analyze contribution different components total value. Unlike <detail_plot>, visualizes regions sectors, <stack_plot> represents breakdown variable across selected categories. Additionally, plot provides option decompose results unstacking components instead displaying stacked bar. flexibility makes suitable analyzing welfare decomposition, trade decomposition, GTAP structural breakdowns. GTAPv7 variables well-suited plot include welfare decomposition components (), terms trade decomposition (E1), breakdown analyses. Since decomposition data often involves multiple components, renaming restructuring data may necessary plotting. example, following command renames \"COLUMN\" values har.plot.data dataframe provide meaningful labels visualization:","code":"# Rename Value if needed wefare.decomp.rename <- data.frame(   ColumnName = \"COLUMN\",   OldName = c(\"alloc_A1\", \"ENDWB1\", \"tech_C1\", \"pop_D1\", \"pref_G1\", \"tot_E1\", \"IS_F1\"),   NewName = c(\"Alloc Eff.\", \"Endwb\", \"Tech Chg.\", \"Pop\", \"Perf\", \"ToT\", \"I-S\"),   stringsAsFactors = FALSE )  har.plot.data <- rename_value(har.plot.data, mapping.file = wefare.decomp.rename) har.plot.data[[\"A\"]][[\"Variable\"]] <- \"Welfare\"  # Define Decomposition stack_plot(data = har.plot.data[[\"A\"]],           x_axis_from = \"Region\",           stack_value_from = \"COLUMN\",           title_prefix = \"\",           output_dir = output.folder,           separate_figure = FALSE,           color_tone = \"green\",           width = 30,           height = 15,           legend_position = \"bottom\",           show_total = TRUE,           unstack_plot = FALSE,           description_as_title = TRUE)  har.plot.data[[\"E1\"]][[\"Variable\"]] <- \"Terms of Trade\"  # Define Decomposition stack_plot(data = har.plot.data[[\"E1\"]],           x_axis_from = \"Region\",           stack_value_from = \"PRICES\",           title_prefix = \"\",           output_dir = output.folder,           separate_figure = FALSE,           color_tone = \"green\",           width = 30,           height = 15,           legend_position = \"bottom\",           show_total = TRUE,           unstack_plot = TRUE,           description_as_title = TRUE)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:stackplottable","dir":"Articles","previous_headings":"","what":"Decomposition Table","title":"GTAPViz: Visualizing GTAP Model Results","text":"","code":"# Table of Decomposition decomp_table(har.plot.data,               header = c(\"A\", \"E1\"),              wide_cols = list(A = \"COLUMN\", E1 = \"PRICES\"),              total_column = TRUE,              output_dir = output.folder,              export_table = TRUE)"},{"path":"https://bodysbobb.github.io/GTAPViz/articles/GTAPViz_plot.html","id":"sec:usefulcmd","dir":"Articles","previous_headings":"","what":"Useful Commands","title":"GTAPViz: Visualizing GTAP Model Results","text":"need automatically modify value column across entire dataframe plotting‚Äîrenaming countries REG column (e.g., changing USA United States CHN China)‚Äîfollowing command useful: Tip: can also create dataframe mapping Excel import R environment.Note: column names must \"OldName\" \"NewName\". \"ColumnName\" can specified directly <rename_value> command, shown example: rename_value(data, \"REG\", mapping.file = \"//file.xlsx\")","code":"rename.region <- data.frame(   ColumnName = \"REG\",   OldName = c(\"USA\", \"CHN\"),   NewName = c(\"United States\", \"China\"),   stringsAsFactors = FALSE )  har.plot.data.rename <- rename_value(har.plot.data, mapping.file = rename.region)"},{"path":"https://bodysbobb.github.io/GTAPViz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pattawee Puangchit. Author, maintainer.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Puangchit P (2025). GTAPViz: Visualization GTAP Model Results HAR SL4 Files. R package version 0.0.0.9000, https://bodysbobb.github.io/GTAPViz/.","code":"@Manual{,   title = {GTAPViz: Visualization of GTAP Model Results from HAR and SL4 Files},   author = {Pattawee Puangchit},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://bodysbobb.github.io/GTAPViz/}, }"},{"path":"https://bodysbobb.github.io/GTAPViz/index.html","id":"gtapviz-automating-gtap-data-processing-and-visualization-with-harplus","dir":"","previous_headings":"","what":"Visualization of GTAP Model Results from HAR and SL4 Files","title":"Visualization of GTAP Model Results from HAR and SL4 Files","text":"package currently development. GTAPViz designed streamline processing visualization GTAP model results using HARplus. enables users efficiently extract, transform, visualize data .sl4 .har files, reducing need manual data handling GTAP model simulations.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualization of GTAP Model Results from HAR and SL4 Files","text":"GTAPViz currently work--progress, may install try using following command:","code":"devtools::install_github(\"Bodysbobb/GTAPViz\")"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Mapping Information ‚Äî add_mapping_info","title":"Add Mapping Information ‚Äî add_mapping_info","text":"description unit based GTAPv7 model variables. Full list refer https://www.gtap.agecon.purdue.edu/models/setsvariables.asp. variable added apart default GTAPv7 model, information left blank.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Mapping Information ‚Äî add_mapping_info","text":"","code":"add_mapping_info(   data_list,   external_map = NULL,   mapping = \"GTAPv7\",   description_info = TRUE,   unit_info = TRUE )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Mapping Information ‚Äî add_mapping_info","text":"data_list list data frame containing GTAP variables. external_map Optional. data frame containing external mapping information columns \"Variable\", \"Description\", \"Unit\". NULL, default GTAPv7 mapping used. mapping Optional. Either \"GTAPv7\", \"\", \"Yes\", \"Mix\". Determines mapping approach. Default \"GTAPv7\". description_info Optional. Logical. TRUE, adds description information. Default TRUE. unit_info Optional. Logical. TRUE, adds unit information. Default TRUE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Mapping Information ‚Äî add_mapping_info","text":"modified list data frame added description /unit information.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Mapping Information ‚Äî add_mapping_info","text":"\"E1\" header HAR files, using GTAPv7 Mix mapping mode, renames \"FORM\" column \"Unit\". using \"Yes\" mapping mode external map, use provided Description Unit values.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Mapping Information ‚Äî add_mapping_info","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/add_mapping_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Mapping Information ‚Äî add_mapping_info","text":"","code":"if (FALSE) { # \\dontrun{ sl4_data1 <- HARplus::load_sl4x(system.file(\"extdata\", \"TAR10.sl4\", package = \"HARplus\")) # Add only Description result <- add_mapping_info(sl4_data1, mapping = \"GTAPv7\", unit_info = FALSE) # Add only Unit result <- add_mapping_info(sl4_data1, mapping = \"GTAPv7\", description_info = FALSE) custom_mapping <- data.frame(Variable = c(\"qgdp\", \"EV\"),                              Description = c(\"Real GDP\", \"Economic Value\"),                              Unit = c(\"Percent\", \"million USD\")) result <- add_mapping_info(sl4_data1, external_map = custom_mapping, mapping = \"Mix\") } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/comparison_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Comparison Plots ‚Äî comparison_plot","title":"Generate Comparison Plots ‚Äî comparison_plot","text":"Creates bar plots comparing values across categories flexible panel configuration.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/comparison_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Comparison Plots ‚Äî comparison_plot","text":"","code":"comparison_plot(   data,   plot_var = NULL,   x_axis_from,   split_by,   title_prefix = \"\",   title_suffix = \"\",   compare_by_experiment = FALSE,   separate_figure = FALSE,   invert_panel = FALSE,   description_as_title = FALSE,   output_dir = NULL,   panel_rows = NULL,   panel_cols = NULL,   color_tone = NULL,   legend_position = \"none\",   width = NULL,   height = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/comparison_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Comparison Plots ‚Äî comparison_plot","text":"data Data frame containing \"Variable\", \"Value\", \"Experiment\", \"Unit\" columns plus x_axis_from split_by variables. plot_var Optional. Character vector data frame \"Variable\" column specify variables plot. x_axis_from Column name use x-axis values (panels compare_by_experiment = TRUE). split_by Column name separating plots (panels invert_panel = TRUE). title_prefix Optional text prepend plot titles. title_suffix Optional text append plot titles. compare_by_experiment TRUE, Experiment plotted x-axis, x_axis_from values panels. separate_figure TRUE, creates individual figures panel value. invert_panel TRUE, uses split_by panels Experiment separation. description_as_title TRUE, uses \"Description\" column titles instead \"Variable\". output_dir Optional path save plots. NULL, plots returned. panel_rows Optional number panel rows. Auto-calculated NULL. panel_cols Optional number panel columns. Auto-calculated NULL. color_tone Optional base color plot. NULL uses default ggplot2 colors. legend_position Position legend: \"none\" (default), \"bottom\", \"top\", \"left\", \"right\". width Optional width inches. Auto-calculated NULL. height Optional height inches. Auto-calculated NULL.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/comparison_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Comparison Plots ‚Äî comparison_plot","text":"list ggplot objects single ggplot object depending settings","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/comparison_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Comparison Plots ‚Äî comparison_plot","text":"","code":"if (FALSE) { # \\dontrun{ comparison_plot(sl4.plot.data$REG,                 x_axis_from = \"Region\",                 plot_var = sl4plot,                 title_prefix = \"Impact on\",                 output_dir = output.folder,                 compare_by_experiment = FALSE,                 description_as_title = TRUE,                 separate_figure = FALSE,                 color_tone = \"grey\",                 width = 20,                 height = 12,                 legend_position = \"bottom\") } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"Convert Multiple Units Nested Data Structures","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"","code":"convert_units(   data,   change_unit_from,   change_unit_to,   adjustment,   value_col = \"Value\",   unit_col = \"Unit\" )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"data data structure (list, data.frame, nested combination) change_unit_from Character vector units change (case-insensitive) change_unit_to Character vector new units (length change_unit_from) adjustment Character vector operations numeric vector (length change_unit_from) value_col Column name containing values adjust (default: \"Value\") unit_col Column name containing unit information (default: \"Unit\")","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"Data structure format input adjusted values units","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/convert_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Multiple Units in Nested Data Structures ‚Äî convert_units","text":"","code":"if (FALSE) { # \\dontrun{ har.plot.data <- convert_units(har.plot.data, change_unit_from = c(\"million USD\"), change_unit_to = c(\"billion USD\"), adjustment = c(\"/1000\")) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"Processes decomposition data, allowing multiple data frames input. Converts specified columns wide format per dataset supporting multiple headers, independent column selections, optional total calculations.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"","code":"decomp_table(   data_list,   header,   wide_cols,   total_column = FALSE,   export_table = FALSE,   multi_sheet = FALSE,   output_dir = NULL,   sheet_names = NULL,   include_units = FALSE )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"data_list named list data frames. data frame must contain \"Experiment\" column. header character vector specifying dataset names data_list processed. wide_cols named list specifying column transformed wide format dataset. Example: list(= \"COLUMN\", E1 = \"PRICES\"). total_column Logical. TRUE, calculates total column dataset summing numeric columns. Default FALSE. export_table Logical. TRUE, exports result Excel file. Default FALSE. multi_sheet Logical. TRUE, dataset written separate sheet Excel file. Default FALSE. output_dir Optional character string specifying directory Excel file saved. sheet_names Optional named list providing custom names sheets exported Excel file. include_units Logical. TRUE \"Unit\" column exists data, unit information merged final output. Default FALSE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"list data frames, containing wide-format decomposition data. export_table = TRUE, results also saved Excel file.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"data single data frame, header ignored, wide_cols single column name. data list data frames, header must specified select relevant subsets dataset. wide_cols must named list matching names data (e.g., \"\", \"E1\"). total_column = TRUE, numerical values row summed \"Total\" column. export_table = TRUE, function saves result Excel file, either single sheet multiple sheets (multi_sheet = TRUE).","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/decomp_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Decomposition Table with Multi-Data Support ‚Äî decomp_table","text":"","code":"if (FALSE) { # \\dontrun{ # Example list of data frames har.plot.data <- list(   A = data.frame(Experiment = c(\"Base\", \"Policy\"),                  Header = \"A\", COLUMN = c(\"Tariff\", \"NTM\"), Value = c(10, 5)),   E1 = data.frame(Experiment = c(\"Base\", \"Policy\"),                   Header = \"E1\", PRICES = c(\"GDP\", \"Consumption\"), Value = c(105, 55)) )  # Convert decomposition tables for both datasets result <- decomp_table(data_list = har.plot.data, header = c(\"A\", \"E1\"),                        wide_cols = list(A = \"COLUMN\", E1 = \"PRICES\"), total_column = TRUE)  # Export as an Excel file with multiple sheets decomp_table(data_list = har.plot.data, header = c(\"A\", \"E1\"),              wide_cols = list(A = \"COLUMN\", E1 = \"PRICES\"),              total_column = TRUE, export_table = TRUE, multi_sheet = TRUE,              output_dir = \"results\", sheet_names = list(A = \"Welfare\", E1 = \"Prices\")) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/detail_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Detailed Plot ‚Äî detail_plot","title":"Generate Detailed Plot ‚Äî detail_plot","text":"Creates detailed plot reporting regions sectors depending variable selection. Uses separate dataframe specify variables plot titles.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/detail_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Detailed Plot ‚Äî detail_plot","text":"","code":"detail_plot(   data,   plot_var = NULL,   y_axis_from,   split_by,   title_prefix = \"\",   title_suffix = \"\",   description_as_title = TRUE,   panel_rows = NULL,   panel_cols = NULL,   positive_color = \"#2E8B57\",   negative_color = \"#CD5C5C\",   output_dir = NULL,   top_impact = NULL,   width = NULL,   height = NULL,   separate_figure = FALSE,   invert_panel = FALSE,   legend_position = \"none\",   width_dodge = 0.5,   width_bar = 0.4 )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/detail_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Detailed Plot ‚Äî detail_plot","text":"data data frame containing full dataset. plot_var data frame \"Variable\" \"PlotTitle\" columns specifying variables plot titles. NULL, variables data plotted default titles. y_axis_from Character vector. Column names use y-axis. split_by Character. Column used separate different plots. title_prefix Optional character string prepend title. title_suffix Optional character string append title. description_as_title Logical. TRUE, uses \"Description\" column plot_var plot title. panel_rows Optional numeric. Number panel rows. left blank, automatically adjusted. panel_cols Optional numeric. Number panel columns. left blank, automatically adjusted. positive_color Character. Color positive values. negative_color Character. Color negative values. output_dir Optional character. Directory save output plot. top_impact Optional numeric. Number top impact factors include. left blank, factors included. width Optional numeric. Width output plot. left blank, automatically adjusted. height Optional numeric. Height output plot. left blank, automatically adjusted. separate_figure Logical. TRUE, creates separate figures combination variable category. invert_panel Logical. TRUE, swaps roles Experiment split_by faceting figure separation. legend_position Character. Position legend: \"none\" (default), \"bottom\", \"top\", \"left\", \"right\". width_dodge Numeric. Dodge width bar position adjustment. Default 0.5. width_bar Numeric. Width bars plot. Default 0.4.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/detail_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Detailed Plot ‚Äî detail_plot","text":"ggplot object NULL plots generated.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-apply_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Filters to GTAP Data ‚Äî .apply_filters","title":"Apply Filters to GTAP Data ‚Äî .apply_filters","text":"Applies region, experiment, sector filters GTAP data.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-apply_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Filters to GTAP Data ‚Äî .apply_filters","text":"","code":".apply_filters(   data,   region_select = NULL,   experiment_select = NULL,   sector_select = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-apply_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Filters to GTAP Data ‚Äî .apply_filters","text":"data List data frames single data frame filter. region_select Character vector regions include. experiment_select Character vector experiments include. sector_select Character vector sectors include.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-apply_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Filters to GTAP Data ‚Äî .apply_filters","text":"Filtered data structure input.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-ask_confirmation.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask for User Confirmation ‚Äî .ask_confirmation","title":"Ask for User Confirmation ‚Äî .ask_confirmation","text":"Prompts user confirmation displaying message reading input console. Returns TRUE user confirms 'y', otherwise FALSE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-ask_confirmation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask for User Confirmation ‚Äî .ask_confirmation","text":"","code":".ask_confirmation(prompt)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-ask_confirmation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ask for User Confirmation ‚Äî .ask_confirmation","text":"prompt character string specifying message display user.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-ask_confirmation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ask for User Confirmation ‚Äî .ask_confirmation","text":"logical value: TRUE user types \"y\" (case-insensitive), FALSE \"n\".","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-ask_confirmation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ask for User Confirmation ‚Äî .ask_confirmation","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_panel_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","title":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","text":"Determines optimal panel layout plotting based number experiments unique values x-axis variable.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_panel_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","text":"","code":".calculate_panel_layout(   data,   panel_rows = NULL,   panel_cols = NULL,   compare_by_x_axis = FALSE,   x_axis_from = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_panel_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","text":"data data frame containing relevant plotting data. panel_rows Optional. Number rows panel layout. panel_cols Optional. Number columns panel layout. compare_by_x_axis Logical. TRUE, layout based unique values x_axis_from instead Experiment. x_axis_from Character. Column name use compare_by_x_axis = TRUE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_panel_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","text":"list rows cols specifying calculated panel layout.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_panel_layout.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Panel Layout (Internal) ‚Äî .calculate_panel_layout","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_plot_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","title":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","text":"Determines appropriate width height plot based panel layout.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_plot_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","text":"","code":".calculate_plot_dimensions(data, panel_layout, compare_by_x_axis = FALSE)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_plot_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","text":"data data frame containing relevant plotting data. panel_layout list containing rows cols specifying panel layout. compare_by_x_axis Logical. TRUE, adjusts dimensions based comparison type.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_plot_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","text":"list width height specifying calculated plot dimensions.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-calculate_plot_dimensions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Plot Dimensions (Internal) ‚Äî .calculate_plot_dimensions","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-consolidate_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate Reports ‚Äî .consolidate_reports","title":"Consolidate Reports ‚Äî .consolidate_reports","text":"Consolidates multiple Excel report files single report optionally removes source files.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-consolidate_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate Reports ‚Äî .consolidate_reports","text":"","code":".consolidate_reports(   output_folder,   pattern = \"\\\\.xlsx$\",   final_name = \"Report_Output.xlsx\",   remove_sources = TRUE,   chunk_size = 10 )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-consolidate_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate Reports ‚Äî .consolidate_reports","text":"output_folder Character. Directory Excel files located. pattern Character. Pattern match Excel files (default: \"\\.xlsx$\"). final_name Character. Name final consolidated report file (default: \"Report_Output.xlsx\"). remove_sources Logical. TRUE, source files removed consolidation (default: TRUE). chunk_size Numeric. Number files process chunk (default: 10).","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-consolidate_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate Reports ‚Äî .consolidate_reports","text":"Invisibly returns TRUE consolidation successful, FALSE files found.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-consolidate_reports.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Consolidate Reports ‚Äî .consolidate_reports","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_comparison_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Single Comparison Plot (Internal) ‚Äî .create_single_comparison_plot","title":"Create Single Comparison Plot (Internal) ‚Äî .create_single_comparison_plot","text":"Creates single comparison plot title unit formatting.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_comparison_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Single Comparison Plot (Internal) ‚Äî .create_single_comparison_plot","text":"","code":".create_single_comparison_plot(   data,   x_axis_from,   plot_title,   unit,   compare_by_experiment,   color_tone,   panel_rows,   panel_cols,   legend_position = \"none\",   invert_panel = FALSE,   panel_var = \"Experiment\" )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_comparison_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Single Comparison Plot (Internal) ‚Äî .create_single_comparison_plot","text":"data Data frame containing data plot x_axis_from Column name use x-axis plot_title Title plot unit Unit measurement compare_by_experiment Logical. TRUE, compares experiments within x-axis categories color_tone Base color plot panel_rows Number panel rows panel_cols Number panel columns legend_position Position legend: \"none\", \"bottom\", \"top\", \"left\", \"right\" invert_panel Logical. TRUE, swaps roles Experiment split_by faceting panel_var Character. Column name use panel faceting","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_comparison_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Single Comparison Plot (Internal) ‚Äî .create_single_comparison_plot","text":"ggplot object","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_stack_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Single Stack Plot (Internal) ‚Äî .create_single_stack_plot","title":"Create Single Stack Plot (Internal) ‚Äî .create_single_stack_plot","text":"Creates single stacked bar plot given parameters total labels.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_stack_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Single Stack Plot (Internal) ‚Äî .create_single_stack_plot","text":"","code":".create_single_stack_plot(   data,   total_data,   x_axis_from,   stack_value_from,   plot_title,   y_axis_title,   compare_by_experiment,   color_tone,   panel_rows,   panel_cols,   show_total = TRUE,   legend_position = \"bottom\",   y_limit = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_stack_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Single Stack Plot (Internal) ‚Äî .create_single_stack_plot","text":"data Data frame containing data plot total_data Data frame containing total values per group x_axis_from Column name use x-axis stack_value_from Column name containing stack categories plot_title Title plot y_axis_title Label y-axis compare_by_experiment Logical. TRUE, compares x-axis values within experiments color_tone Base color plot panel_rows Number panel rows panel_cols Number panel columns legend_position Position legend y_limit Optional y-axis limits","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_single_stack_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Single Stack Plot (Internal) ‚Äî .create_single_stack_plot","text":"ggplot object","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_unstacked_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Unstacked Plot (Internal) ‚Äî .create_unstacked_plot","title":"Create Unstacked Plot (Internal) ‚Äî .create_unstacked_plot","text":"Creates side--side bar plot components given parameters.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_unstacked_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Unstacked Plot (Internal) ‚Äî .create_unstacked_plot","text":"","code":".create_unstacked_plot(   data,   total_data,   x_axis_from,   stack_value_from,   plot_title,   y_axis_title,   compare_by_experiment,   color_tone,   panel_rows,   panel_cols,   legend_position = \"bottom\",   y_limit = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_unstacked_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Unstacked Plot (Internal) ‚Äî .create_unstacked_plot","text":"data Data frame containing data plot total_data Data frame containing total values per group x_axis_from Column name use x-axis stack_value_from Column name containing component categories plot_title Title plot y_axis_title Label y-axis compare_by_experiment Logical. TRUE, compares x-axis values within experiments color_tone Base color plot panel_rows Number panel rows panel_cols Number panel columns legend_position Position legend y_limit Optional y-axis limits","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-create_unstacked_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Unstacked Plot (Internal) ‚Äî .create_unstacked_plot","text":"ggplot object","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-filter_top_impact.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Top Impact Data ‚Äî .filter_top_impact","title":"Filter Top Impact Data ‚Äî .filter_top_impact","text":"internal function filters top top_impact observations within group dataset, selecting equal number positive negative impact values possible.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-filter_top_impact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Top Impact Data ‚Äî .filter_top_impact","text":"","code":".filter_top_impact(data, top_impact, group_col)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-filter_top_impact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Top Impact Data ‚Äî .filter_top_impact","text":"data data frame list data frames containing dataset filtered. top_impact numeric value indicating number top impact factors retain. NULL, data returned. group_col character string specifying column group filtering top impacts.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-filter_top_impact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Top Impact Data ‚Äî .filter_top_impact","text":"filtered data frame (list data frames data list), containing top top_impact observations group.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-filter_top_impact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Top Impact Data ‚Äî .filter_top_impact","text":"function works data frames lists data frames. ensures Value numeric checks required columns. function groups data Experiment, Variable, Unit, group_col. selects top positive negative values separately, maintaining balance. insufficient number negative (positive) values exist, remaining quota filled category. final dataset sorted Experiment, Variable, Unit, group_col, Value.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Color Palette (Internal) ‚Äî .generate_color_palette","title":"Generate Color Palette (Internal) ‚Äî .generate_color_palette","text":"Generates color palette shades positive, negative, neutral values.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Color Palette (Internal) ‚Äî .generate_color_palette","text":"","code":".generate_color_palette(positive_color = \"#2E8B57\", negative_color = \"#CD5C5C\")"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Color Palette (Internal) ‚Äî .generate_color_palette","text":"positive_color Character. Hex code positive color. negative_color Character. Hex code negative color.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Color Palette (Internal) ‚Äî .generate_color_palette","text":"named vector containing hex codes different shades.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_comparison_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","title":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","text":"Generates color palette comparison plots based base color tone.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_comparison_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","text":"","code":".generate_comparison_colors(   data,   color_tone = NULL,   compare_by_x_axis = FALSE,   x_axis_from = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_comparison_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","text":"data data frame containing relevant plotting data. color_tone Character. Base color generating shades. compare_by_x_axis Logical. TRUE, colors generated based Experiment values. x_axis_from Character. Column name used compare_by_x_axis = TRUE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_comparison_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","text":"vector colors hexadecimal format.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_comparison_colors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Comparison Colors (Internal) ‚Äî .generate_comparison_colors","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_stack_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Color Palette for Stacked Plots (Internal) ‚Äî .generate_stack_colors","title":"Generate Color Palette for Stacked Plots (Internal) ‚Äî .generate_stack_colors","text":"Generates diverse color palette stacked bar components, ensuring good contrast items.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_stack_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Color Palette for Stacked Plots (Internal) ‚Äî .generate_stack_colors","text":"","code":".generate_stack_colors(data, stack_value_from, color_tone = NULL)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_stack_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Color Palette for Stacked Plots (Internal) ‚Äî .generate_stack_colors","text":"data Data frame containing stack value column stack_value_from Column name containing stack categories color_tone Optional base color influence palette","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-generate_stack_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Color Palette for Stacked Plots (Internal) ‚Äî .generate_stack_colors","text":"named vector colors stack component","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-get_title_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Title Mapping for Plot Labels (Internal) ‚Äî .get_title_mapping","title":"Generate Title Mapping for Plot Labels (Internal) ‚Äî .get_title_mapping","text":"Determines appropriate title names plotting based available columns dataset. Description column exists description_as_title TRUE, uses Description titles. Otherwise, checks PlotTitle falls back using Variable names.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-get_title_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Title Mapping for Plot Labels (Internal) ‚Äî .get_title_mapping","text":"","code":".get_title_mapping(data, description_as_title = TRUE)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-get_title_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Title Mapping for Plot Labels (Internal) ‚Äî .get_title_mapping","text":"data data frame list data frames containing dataset. description_as_title Logical. TRUE, prioritizes Description column titles. FALSE, using Variable title name.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-get_title_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Title Mapping for Plot Labels (Internal) ‚Äî .get_title_mapping","text":"named vector variable names map corresponding titles.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-output_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Output Formats ‚Äî .output_format","title":"Determine Output Formats ‚Äî .output_format","text":"Returns character vector output format names corresponding global variable set \"yes\".","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-output_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Output Formats ‚Äî .output_format","text":"","code":".output_format()"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-output_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Output Formats ‚Äî .output_format","text":"character vector output format names.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-output_format.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine Output Formats ‚Äî .output_format","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_bilateral_trade.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","title":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","text":"Processes bilateral trade data GTAP output, focusing QXS variables.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_bilateral_trade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","text":"","code":".process_bilateral_trade(   grouped_data,   output_path,   formats,   var_pattern = \"qxs\",   export = TRUE )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_bilateral_trade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","text":"grouped_data List. grouped data containing 3D arrays bilateral trade information. output_path Character. Path output files saved. formats Character vector. Output formats (e.g., c(\"xlsx\", \"csv\")). var_pattern Character. Pattern match bilateral trade variables (default: \"qxs\").","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_bilateral_trade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","text":"Modified grouped_data bilateral trade data extracted.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_bilateral_trade.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process Bilateral Trade Data ‚Äî .process_bilateral_trade","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_macro_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Macro Data ‚Äî .process_macro_data","title":"Process Macro Data ‚Äî .process_macro_data","text":"Processes macro data GTAP output exports using HARplus::export_data.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_macro_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Macro Data ‚Äî .process_macro_data","text":"","code":".process_macro_data(   input_files,   experiment_names = NULL,   output_path,   formats,   export = TRUE )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_macro_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Macro Data ‚Äî .process_macro_data","text":"input_files Character vector. Paths input files. experiment_names Character vector. Experiment names, defaulting file names sans extension. output_path Character. Directory output files saved. formats Character vector. Output formats (e.g., c(\"xlsx\", \"csv\")).","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_macro_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Macro Data ‚Äî .process_macro_data","text":"Invisibly returns NULL.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-process_macro_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process Macro Data ‚Äî .process_macro_data","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_extract_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate GTAP Files for Extraction ‚Äî .validate_extract_files","title":"Validate GTAP Files for Extraction ‚Äî .validate_extract_files","text":"Validates input files, mapping configurations, case names GTAP data extraction.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_extract_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate GTAP Files for Extraction ‚Äî .validate_extract_files","text":"","code":".validate_extract_files(sl4map, harmap, input.folder, case.name, info.mode)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_extract_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate GTAP Files for Extraction ‚Äî .validate_extract_files","text":"sl4map Data frame, NULL, FALSE. Mapping SL4 variables. harmap Data frame, NULL, FALSE. Mapping HAR variables. input.folder Character. Path folder containing GTAP input files. case.name Character vector. Case names (experiment names) validate. info.mode Character. Mapping mode: \"GTAPv7\", \"Yes\", \"\", \"Mix\".","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_extract_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate GTAP Files for Extraction ‚Äî .validate_extract_files","text":"list validation status, messages, proceed flag.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_gtap_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate GTAP Files ‚Äî .validate_gtap_files","title":"Validate GTAP Files ‚Äî .validate_gtap_files","text":"Validates input files, mapping configurations, case names GTAP processing.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_gtap_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate GTAP Files ‚Äî .validate_gtap_files","text":"","code":".validate_gtap_files(   input_dir,   output_dir,   experiment,   mapping_info,   sl4file,   harfile,   output_formats )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_gtap_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate GTAP Files ‚Äî .validate_gtap_files","text":"input_dir Character. Path folder containing GTAP input files. output_dir Character. Path output files saved. experiment Character vector. Case names (experiment names) validate. mapping_info Character. Mapping mode: \"GTAPv7\", \"Yes\", \"\", \"Mix\". sl4file Data frame, NULL, FALSE. Mapping SL4 variables. harfile Data frame, NULL, FALSE. Mapping HAR variables. output_formats Character vector. Output formats validate.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_gtap_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate GTAP Files ‚Äî .validate_gtap_files","text":"list three elements: status Character indicating validation status (\"ok\", \"error\", \"warning\"). messages Character vector validation messages. proceed Logical indicating whether processing continue.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/dot-validate_gtap_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validate GTAP Files ‚Äî .validate_gtap_files","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"Extracts scalar macroeconomic variables multiple SL4 datasets aggregates structured data frame.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"","code":"gtap_macros_data(..., experiment_names = NULL)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"... One SL4 data objects. Can either: single list containing multiple SL4 datasets Multiple SL4 datasets separate arguments experiment_names Optional character vector experiment names. NULL, names inferred.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"data frame three columns: \"Experiment\": scenario name \"Variable\": macroeconomic variable name \"Value\": extracted numeric value","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/gtap_macros_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Aggregate Scalar Macroeconomic Variables ‚Äî gtap_macros_data","text":"","code":"if (FALSE) { # \\dontrun{ # Import sample data sl4_data1 <- HARplus::load_sl4x(system.file(\"extdata\", \"TAR10.sl4\", package = \"HARplus\")) sl4_data2 <- HARplus::load_sl4x(system.file(\"extdata\", \"SUBT10.sl4\", package = \"HARplus\"))  # Method 1: Using a list of datasets data_list <- list(base = sl4_data1, policy = sl4_data2) Macros1 <- gtap_macros_data(data_list)  # Method 2: Using multiple arguments Macros2 <- gtap_macros_data(sl4_data1, sl4_data2,                            experiment_names = c(\"Base\", \"Policy\")) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/macro_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","title":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","text":"Creates figures macro variables Macros header SL4. Uses separate dataframe specify variables plot options using either variable names, PlotTitle, Description columns plot titles.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/macro_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","text":"","code":"macro_plot(   data,   plot_var = NULL,   title_prefix = \"\",   title_suffix = \"\",   compare_by_experiment = FALSE,   description_as_title = FALSE,   output_dir = NULL,   panel_rows = NULL,   panel_cols = NULL,   color_tone = NULL,   separate_figure = FALSE,   width = NULL,   height = NULL,   legend_position = \"none\" )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/macro_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","text":"data data frame containing full dataset macroeconomic variables. plot_var data frame \"Variable\" column optionally \"PlotTitle\" \"Description\" columns specifying variables plot titles. NULL, variables data plotted default titles. title_prefix Optional character string prepend title. title_suffix Optional character string append title. compare_by_experiment Logical. TRUE, compares experiments within x-axis categories. description_as_title Logical. TRUE, uses \"Description\" column plot titles instead \"PlotTitle\". Default FALSE. output_dir Optional character. Directory save output plot. panel_rows Optional numeric. Number panel rows. left blank, automatically adjusted. panel_cols Optional numeric. Number panel columns. left blank, automatically adjusted. color_tone Optional character. Base color plot. left blank, default color used. separate_figure Logical. FALSE, combines multiple variables one plot. width Optional numeric. Width output plot. left blank, automatically adjusted. height Optional numeric. Height output plot. left blank, automatically adjusted. legend_position Position legend: \"none\", \"bottom\", \"top\", \"left\", \"right\"","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/macro_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","text":"ggplot object list plots separate_figure = TRUE.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/macro_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Macro Plot with Flexible Title Options ‚Äî macro_plot","text":"","code":"if (FALSE) { # \\dontrun{ macro_plot(Macros,            plot_var = macro.map,            compare_by_experiment = FALSE,            color_tone = \"grey\",            output_dir = output.folder,            description_as_title = FALSE,            panel_rows = 2,            width = 45,            separate_figure = FALSE,            legend_position = \"bottom\") } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/plot_gtap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GTAP Data ‚Äî plot_gtap_data","title":"Extract GTAP Data ‚Äî plot_gtap_data","text":"Extracts data GTAP SL4 HAR files simplified filtering options.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/plot_gtap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GTAP Data ‚Äî plot_gtap_data","text":"","code":"plot_gtap_data(   sl4file,   harfile,   experiment,   region_select = NULL,   sector_select = NULL,   mapping_info = \"GTAPv7\",   project_dir = NULL,   input_dir = NULL,   subtotal = FALSE,   sl4_list_name = \"sl4.plot.data\",   har_list_name = \"har.plot.data\",   sl4_structure_name = \"sl4.structure\",   har_structure_name = \"har.structure\" )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/plot_gtap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract GTAP Data ‚Äî plot_gtap_data","text":"sl4file data frame containing SL4 mapping information, FALSE skip SL4 processing. harfile data frame containing HAR mapping information, FALSE skip HAR processing. experiment character vector experiment names processed. region_select Optional. vector specifying regions filter data. sector_select Optional. vector specifying sectors filter data. mapping_info character string indicating mapping mode (e.g., \"GTAPv7\"). Default \"GTAPv7\". project_dir Optional. Path project directory containing \"\" folder. input_dir Optional. Directory path input files; overrides project_dir/provided. subtotal Logical. TRUE, includes subtotal data. Default FALSE. sl4_list_name character string specifying variable name SL4 plotting data. Default \"sl4.plot.data\". har_list_name character string specifying variable name HAR plotting data. Default \"har.plot.data\". sl4_structure_name character string specifying variable name SL4 structure. Default \"sl4.structure\". har_structure_name character string specifying variable name HAR structure. Default \"har.structure\".","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/plot_gtap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract GTAP Data ‚Äî plot_gtap_data","text":"list containing extracted data applied filters: sl4_data Extracted filtered SL4 data SL4 processing enabled sl4structure Structure information SL4 variables available har_data Extracted filtered HAR data HAR processing enabled harstructure Structure information HAR variables available backward compatibility, data can still assigned specified variables via sl4_list_name, har_list_name, sl4_structure_name, har_structure_name parameters.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/plot_gtap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract GTAP Data ‚Äî plot_gtap_data","text":"","code":"# Extract specific variables with region filters if (FALSE) { # \\dontrun{ sl4_selected <- data.frame(   Variable = c(\"qo\", \"qgdp\", \"EV\"),   stringsAsFactors = FALSE )  result <- plot_gtap_data(   sl4file = sl4_selected,   harfile = FALSE,   experiment = c(\"baseline\", \"policy\"),   region_select = c(\"USA\", \"CHN\", \"EU\"),   input_dir = \"D:/GTAP_inputs\" ) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process GTAP Data Automation ‚Äî process_gtap_data","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"Processes GTAP data SL4 HAR files automatically using external mapping files. default, uses GTAPv7 definition variable descriptions units.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"","code":"process_gtap_data(   sl4file,   harfile,   experiment,   mapping_info = \"GTAPv7\",   project_dir = NULL,   input_dir = NULL,   output_dir = NULL,   output_formats = NULL,   export_data = TRUE )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"sl4file Data frame, NULL, FALSE. Mapping SL4 variables. Set NULL extract variables, FALSE skip SL4 processing. harfile Data frame, NULL, FALSE. Mapping HAR variables. Set NULL extract variables, FALSE skip HAR processing. experiment Character vector. Case names process. mapping_info Character. Mapping mode: \"GTAPv7\" (default), \"Yes\", \"\", \"Mix\". project_dir Character. Path project folder \"\" \"\" subfolders. input_dir Character. Path input folder. Overrides project_dir/specified. output_dir Character. Path output folder. Overrides project_dir/specified. output_formats Character vector. Output formats (e.g., c(\"csv\", \"stata\", \"rds\", \"txt\")). export_data Logical. TRUE, exports processed data files.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"export_data=TRUE, returns NULL invisibly. export_data=FALSE, returns list processed data.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"function provides complete automation workflow processing GTAP model outputs. handles SL4 files (solution files) HAR files (welfare decomposition files). key parameters sl4file harfile accept three different input types: Data frame: Contains variable mappings required \"Variable\" column optional \"Description\" \"Unit\" columns. provided, specified variables extracted. NULL: Extracts available variables respective file type, using GTAPv7 definitions descriptions units. FALSE: Completely skips processing file type, allowing function focus file type. mapping_info parameter controls descriptions units assigned: GTAPv7: Uses standard GTAPv7 definitions (default) Yes: Uses supplied descriptions units sl4file/harfile : add descriptions units Mix: Prioritizes supplied descriptions units, falling back GTAPv7 missing values","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/process_gtap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process GTAP Data Automation ‚Äî process_gtap_data","text":"","code":"# Example 1: Process all variables from both SL4 and HAR files if (FALSE) { # \\dontrun{ process_gtap_data(   sl4file = NULL,   harfile = NULL,   experiment = c(\"baseline\", \"scenario1\"),   project_dir = \"D:/GTAP_Project\",   mapping_info = \"GTAPv7\" ) } # }  # Example 2: Process only specific variables using custom mapping if (FALSE) { # \\dontrun{ # Create mapping for selected SL4 variables sl4_selected <- data.frame(   Variable = c(\"qo\", \"qgdp\", \"EV\"),   stringsAsFactors = FALSE )  # Create mapping for selected HAR variables har_selected <- data.frame(   Variable = c(\"A\", \"E1\"),  # Welfare and ToT decomposition   stringsAsFactors = FALSE )  process_gtap_data(   sl4file = sl4_selected,   harfile = har_selected,   experiment = c(\"baseline\", \"policy\"),   input_dir = \"D:/GTAP_inputs\",   output_dir = \"D:/GTAP_results\" ) } # }  # Example 3: Custom descriptions and units instead of GTAPv7 defaults if (FALSE) { # \\dontrun{ # Create custom mapping with descriptions and units custom_mapping <- data.frame(   Variable = c(\"qo\", \"qgdp\", \"EV\"),   Description = c(\"Output by sector\", \"Real GDP\", \"Equivalent Variation\"),   Unit = c(\"% change\", \"% change\", \"million USD\"),   stringsAsFactors = FALSE )  process_gtap_data(   sl4file = custom_mapping,   harfile = FALSE,  # Skip HAR processing   experiment = c(\"baseline\", \"policy\"),   project_dir = \"D:/GTAP_Project\",   mapping_info = \"Yes\"  # Use only supplied descriptions and units ) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"Renames bilateral trade columns GTAP data output, specifically targeting REG columns Source Destination data frames COMMREGREG dimension structure.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"","code":"rename_GTAP_bilateral(data)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"data List data frame. Output get_data_by_var, get_data_by_dims, group_data_by_dims.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"Data renamed columns, maintaining original structure type.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"Name","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_GTAP_bilateral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename GTAP Bilateral Trade Columns ‚Äî rename_GTAP_bilateral","text":"","code":"if (FALSE) { # \\dontrun{ # Load Sample Data sl4_data <- HARplus::load_sl4x(system.file(\"extdata\", \"TAR10.sl4\", package = \"HARplus\"))  # For direct data frame output df <- HARplus::get_data_by_dims(\"COMM*REG*REG\", sl4_data) df_renamed <- rename_GTAP_bilateral(df) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"Replaces specified values given column new values based mapping file. column_name provided, automatically extracted mapping.file available.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"","code":"rename_value(data, column_name = NULL, mapping.file)"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"data data frame list data frames containing column modify. column_name Optional. Character. name column values changed. NULL, function attempt extract ColumnName mapping.file. mapping.file data frame containing OldName NewName columns specify mapping values replaced. Optionally, ColumnName column may define column modified.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"modified data frame list data frames specified values replaced.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/rename_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Values in a Data Frame or List of Data Frames ‚Äî rename_value","text":"","code":"if (FALSE) { # \\dontrun{ # Example mapping file wefare.decomp.rename <- data.frame(   OldName = c(\"alloc_A1\", \"ENDWB1\", \"tech_C1\"),   NewName = c(\"Allocation\", \"Endowment\", \"Technology\"),   ColumnName = \"Variable\",   stringsAsFactors = FALSE )  # Load example data har_path <- system.file(\"extdata\", \"TAR10-WEL.har\", package = \"HARplus\") har_data <- HARplus::load_harx(har_path)  # Apply renaming modified_data <- rename_value(har_data, mapping.file = wefare.decomp.rename) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Report Table ‚Äî report_table","title":"Create Report Table ‚Äî report_table","text":"Generates structured report table given dataset, allowing flexible formatting customization column names. function reshapes data present variables wide format experimental groups rows.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Report Table ‚Äî report_table","text":"","code":"report_table(   data,   vars,   x_axis_from,   output_dir = NULL,   workbook_name = NULL,   sheet_name = \"Results\",   col_names = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Report Table ‚Äî report_table","text":"data data frame list containing dataset. list, converted data frame processing. vars character vector specifying variables include report. x_axis_from character string specifying column used grouping (e.g., \"REG\", \"COMM\"). output_dir Optional character string specifying directory report saved Excel file. NULL, table exported. workbook_name Optional character string Excel workbook name. Default \"Report_table\". sheet_name Optional character string worksheet name. Default \"Results\". col_names Optional data frame character vector renaming columns. data frame, must contain \"Variable\" \"PlotTitle\" columns map variable names custom titles. character vector, must match length vars.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Report Table ‚Äî report_table","text":"formatted data frame wide format grouped variables columns experimental groups rows. output_dir provided, function also saves output Excel file.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Report Table ‚Äî report_table","text":"function checks required columns \"Experiment\", \"Variable\", \"Value\", specified x_axis_from column. table formatted ensure numerical values rounded two decimal places. output_dir provided, table exported Excel file enhanced formatting. column renaming (col_names) specified, applied improve readability.","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Report Table ‚Äî report_table","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/report_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Report Table ‚Äî report_table","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset data <- data.frame(   Experiment = rep(c(\"Baseline\", \"Policy\"), each = 3),   REG = rep(c(\"USA\", \"CHN\", \"EU\"), 2),   Variable = rep(c(\"GDP\", \"Consumption\", \"Investment\"), 2),   Value = c(100, 50, 30, 105, 55, 35) )  # Generate report table report <- report_table(data, vars = c(\"GDP\", \"Consumption\"),                        x_axis_from = \"REG\", output_dir = \"results\")  # Custom column names col_names_df <- data.frame(   Variable = c(\"GDP\", \"Consumption\"),   PlotTitle = c(\"Gross Domestic Product\", \"Household Consumption\") )  report_table(data, vars = c(\"GDP\", \"Consumption\"), x_axis_from = \"REG\",              output_dir = \"results\", col_names = col_names_df) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Scalar Result Table ‚Äî scalar_table","title":"Create Scalar Result Table ‚Äî scalar_table","text":"Generates formatted table summarizing scalar results given dataset. function transforms long-format data wide format scenarios columns, making comparisons across experiments accessible.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Scalar Result Table ‚Äî scalar_table","text":"","code":"scalar_table(   data,   vars = NULL,   output_dir = NULL,   workbook_name = \"scalar_results\",   sheet_name = \"Results\" )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Scalar Result Table ‚Äî scalar_table","text":"data data frame list containing scalar data, observation consists experiment name, variable name, corresponding value. vars Optional character vector variable names include table. NULL, available variables dataset used. output_dir Optional character. Directory generated table saved Excel file. NULL, file created. workbook_name Optional character. Name output Excel workbook. Default \"scalar_results\". sheet_name Optional character. Name worksheet Excel file. Default \"Results\".","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Scalar Result Table ‚Äî scalar_table","text":"formatted data frame wide format variables rows experiments columns. output_dir provided, function also saves output Excel file.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Scalar Result Table ‚Äî scalar_table","text":"data list data frame, function attempts combine data frame. table formatted ensure numerical values rounded two decimal places. output_dir specified, table exported Excel file proper formatting. Required columns data \"Experiment\", \"Variable\", \"Value\".","code":""},{"path":[]},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Scalar Result Table ‚Äî scalar_table","text":"Pattawee Puangchit","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/scalar_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Scalar Result Table ‚Äî scalar_table","text":"","code":"if (FALSE) { # \\dontrun{ sl4_data1 <- HARplus::get_data_by_var(c(\"globalcgds\", \"vgdpwld\", \"WEV\"), sl4_data) scalar_table <- scalar_table(   data = sl4_data1,   vars = \"vgdpwld\",   output_dir = temp_dir,   workbook_name = \"global_indicators\",   sheet_name = \"Results\" ) } # }"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/stack_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Stacked Bar Plot with Auto-Dimensions ‚Äî stack_plot","title":"Generate Stacked Bar Plot with Auto-Dimensions ‚Äî stack_plot","text":"Creates stacked bar plots automatic total calculations flexible grouping. Uses separate dataframe specify variables plot titles. Auto-adjusts dimensions panel layout specified.","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/stack_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Stacked Bar Plot with Auto-Dimensions ‚Äî stack_plot","text":"","code":"stack_plot(   data,   plot_var = NULL,   x_axis_from,   stack_value_from,   title_prefix = \"\",   title_suffix = \"\",   y_axis_title = NULL,   compare_by_experiment = FALSE,   separate_figure = FALSE,   unstack_plot = FALSE,   output_dir = NULL,   panel_rows = NULL,   panel_cols = NULL,   color_tone = NULL,   show_total = TRUE,   description_as_title = TRUE,   legend_position = \"bottom\",   y_limit = NULL,   width = NULL,   height = NULL )"},{"path":"https://bodysbobb.github.io/GTAPViz/reference/stack_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Stacked Bar Plot with Auto-Dimensions ‚Äî stack_plot","text":"data data frame containing full dataset. plot_var data frame \"Variable\" \"PlotTitle\" columns specifying variables plot titles. NULL, variables data plotted default titles. x_axis_from Character. Column name use x-axis grouping stack_value_from Character. Column name containing stack categories title_prefix Optional character string prepend title title_suffix Optional character string append title y_axis_title Character. Y-axis label. NULL, uses Unit available. compare_by_experiment Logical. TRUE, compares x-axis values within experiments separate_figure Logical. TRUE, creates separate figures instead panels unstack_plot Logical. TRUE, displays components side side instead stacked creates separate figures x_axis_from value output_dir Optional character. Directory save output plot panel_rows Optional numeric. Number panel rows panel_cols Optional numeric. Number panel columns color_tone Optional character. Base color plot color generation show_total Logical. TRUE, displays total values stacked bars. Default TRUE. description_as_title Logical. TRUE, uses \"Description\" column title instead \"Variable\". Default TRUE. legend_position Character. Position legend: \"bottom\" (default), \"top\", \"left\", \"right\", \"none\" y_limit Optional numeric vector. Custom y-axis limits (e.g., c(-5, 5)) width Optional numeric. Width output plot height Optional numeric. Height output plot","code":""},{"path":"https://bodysbobb.github.io/GTAPViz/reference/stack_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Stacked Bar Plot with Auto-Dimensions ‚Äî stack_plot","text":"list ggplot objects single ggplot object depending settings","code":""}]
